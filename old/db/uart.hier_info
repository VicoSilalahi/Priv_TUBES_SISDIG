|uart
i_CLOCK => uart_tx:u_TX.i_CLOCK
i_CLOCK => s_TX_START.CLK
i_CLOCK => r_TX_DATA[0].CLK
i_CLOCK => r_TX_DATA[1].CLK
i_CLOCK => r_TX_DATA[2].CLK
i_CLOCK => r_TX_DATA[3].CLK
i_CLOCK => r_TX_DATA[4].CLK
i_CLOCK => r_TX_DATA[5].CLK
i_CLOCK => r_TX_DATA[6].CLK
i_CLOCK => r_TX_DATA[7].CLK
i_CLOCK => s_log_addr[0].CLK
i_CLOCK => s_log_addr[1].CLK
i_CLOCK => s_log_addr[2].CLK
i_CLOCK => s_log_addr[3].CLK
i_CLOCK => s_log_addr[4].CLK
i_CLOCK => s_log_addr[5].CLK
i_CLOCK => s_log_addr[6].CLK
i_CLOCK => s_log_addr[7].CLK
i_CLOCK => s_allow_press.CLK
i_CLOCK => s_button_counter[0].CLK
i_CLOCK => s_button_counter[1].CLK
i_CLOCK => s_button_counter[2].CLK
i_CLOCK => s_button_counter[3].CLK
i_CLOCK => s_button_counter[4].CLK
i_CLOCK => s_button_counter[5].CLK
i_CLOCK => s_button_counter[6].CLK
i_CLOCK => s_button_counter[7].CLK
i_CLOCK => s_button_counter[8].CLK
i_CLOCK => s_button_counter[9].CLK
i_CLOCK => s_button_counter[10].CLK
i_CLOCK => s_button_counter[11].CLK
i_CLOCK => s_button_counter[12].CLK
i_CLOCK => s_button_counter[13].CLK
i_CLOCK => s_button_counter[14].CLK
i_CLOCK => s_button_counter[15].CLK
i_CLOCK => s_button_counter[16].CLK
i_CLOCK => s_button_counter[17].CLK
i_CLOCK => s_button_counter[18].CLK
i_CLOCK => s_button_counter[19].CLK
i_CLOCK => s_button_counter[20].CLK
i_CLOCK => s_button_counter[21].CLK
i_CLOCK => s_button_counter[22].CLK
i_CLOCK => s_button_counter[23].CLK
i_CLOCK => s_button_counter[24].CLK
i_CLOCK => s_button_counter[25].CLK
i_CLOCK => uart_rx:u_RX.i_CLOCK
i_SEND => p_TRANSMIT.IN1
i_DISPLAY => p_DISPLAY_RX.IN1
o_TX <= uart_tx:u_TX.o_TX_LINE
i_RX => uart_rx:u_RX.i_RX
i_log_ADDR[0] => ~NO_FANOUT~
i_log_ADDR[1] => ~NO_FANOUT~
i_log_ADDR[2] => ~NO_FANOUT~
i_log_ADDR[3] => ~NO_FANOUT~
i_log_ADDR[4] => ~NO_FANOUT~
i_log_ADDR[5] => ~NO_FANOUT~
i_log_ADDR[6] => ~NO_FANOUT~
i_log_ADDR[7] => ~NO_FANOUT~
o_sig_CRRP_DATA <= uart_rx:u_RX.o_sig_CRRP_DATA
o_sig_RX_BUSY <= uart_rx:u_RX.o_BUSY
o_sig_TX_BUSY <= comb.DB_MAX_OUTPUT_PORT_TYPE
o_DATA_OUT[0] <= uart_rx:u_RX.o_DATA[0]
o_DATA_OUT[1] <= uart_rx:u_RX.o_DATA[1]
o_DATA_OUT[2] <= uart_rx:u_RX.o_DATA[2]
o_DATA_OUT[3] <= uart_rx:u_RX.o_DATA[3]
o_DATA_OUT[4] <= uart_rx:u_RX.o_DATA[4]
o_DATA_OUT[5] <= uart_rx:u_RX.o_DATA[5]
o_DATA_OUT[6] <= uart_rx:u_RX.o_DATA[6]
o_DATA_OUT[7] <= uart_rx:u_RX.o_DATA[7]
o_hex[0] <= asciiHex:a2h.o_hex[0]
o_hex[1] <= asciiHex:a2h.o_hex[1]
o_hex[2] <= asciiHex:a2h.o_hex[2]
o_hex[3] <= asciiHex:a2h.o_hex[3]
o_hex[4] <= asciiHex:a2h.o_hex[4]
o_hex[5] <= asciiHex:a2h.o_hex[5]
o_hex[6] <= asciiHex:a2h.o_hex[6]


|uart|uart_tx:u_TX
i_CLOCK => r_INDEX[0].CLK
i_CLOCK => r_INDEX[1].CLK
i_CLOCK => r_INDEX[2].CLK
i_CLOCK => r_INDEX[3].CLK
i_CLOCK => o_TX_LINE~reg0.CLK
i_CLOCK => r_PRESCALER[0].CLK
i_CLOCK => r_PRESCALER[1].CLK
i_CLOCK => r_PRESCALER[2].CLK
i_CLOCK => r_PRESCALER[3].CLK
i_CLOCK => r_PRESCALER[4].CLK
i_CLOCK => r_PRESCALER[5].CLK
i_CLOCK => r_PRESCALER[6].CLK
i_CLOCK => r_PRESCALER[7].CLK
i_CLOCK => r_PRESCALER[8].CLK
i_CLOCK => r_PRESCALER[9].CLK
i_CLOCK => r_PRESCALER[10].CLK
i_CLOCK => r_PRESCALER[11].CLK
i_CLOCK => r_PRESCALER[12].CLK
i_CLOCK => o_BUSY~reg0.CLK
i_CLOCK => s_TRANSMITING_FLAG.CLK
i_CLOCK => r_DATA_BUFFER[0].CLK
i_CLOCK => r_DATA_BUFFER[1].CLK
i_CLOCK => r_DATA_BUFFER[2].CLK
i_CLOCK => r_DATA_BUFFER[3].CLK
i_CLOCK => r_DATA_BUFFER[4].CLK
i_CLOCK => r_DATA_BUFFER[5].CLK
i_CLOCK => r_DATA_BUFFER[6].CLK
i_CLOCK => r_DATA_BUFFER[7].CLK
i_CLOCK => r_DATA_BUFFER[8].CLK
i_CLOCK => r_DATA_BUFFER[9].CLK
i_START => process_0.IN1
o_BUSY <= o_BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE
i_DATA[0] => r_DATA_BUFFER[1].DATAIN
i_DATA[1] => r_DATA_BUFFER[2].DATAIN
i_DATA[2] => r_DATA_BUFFER[3].DATAIN
i_DATA[3] => r_DATA_BUFFER[4].DATAIN
i_DATA[4] => r_DATA_BUFFER[5].DATAIN
i_DATA[5] => r_DATA_BUFFER[6].DATAIN
i_DATA[6] => r_DATA_BUFFER[7].DATAIN
i_DATA[7] => r_DATA_BUFFER[8].DATAIN
o_TX_LINE <= o_TX_LINE~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_rx:u_RX
i_CLOCK => MEM_UART~16.CLK
i_CLOCK => MEM_UART~0.CLK
i_CLOCK => MEM_UART~1.CLK
i_CLOCK => MEM_UART~2.CLK
i_CLOCK => MEM_UART~3.CLK
i_CLOCK => MEM_UART~4.CLK
i_CLOCK => MEM_UART~5.CLK
i_CLOCK => MEM_UART~6.CLK
i_CLOCK => MEM_UART~7.CLK
i_CLOCK => MEM_UART~8.CLK
i_CLOCK => MEM_UART~9.CLK
i_CLOCK => MEM_UART~10.CLK
i_CLOCK => MEM_UART~11.CLK
i_CLOCK => MEM_UART~12.CLK
i_CLOCK => MEM_UART~13.CLK
i_CLOCK => MEM_UART~14.CLK
i_CLOCK => MEM_UART~15.CLK
i_CLOCK => o_sig_CRRP_DATA~reg0.CLK
i_CLOCK => r_COUNTER[0].CLK
i_CLOCK => r_COUNTER[1].CLK
i_CLOCK => r_COUNTER[2].CLK
i_CLOCK => r_COUNTER[3].CLK
i_CLOCK => r_COUNTER[4].CLK
i_CLOCK => r_COUNTER[5].CLK
i_CLOCK => r_COUNTER[6].CLK
i_CLOCK => r_COUNTER[7].CLK
i_CLOCK => r_DATA_BUFFER[0].CLK
i_CLOCK => r_DATA_BUFFER[1].CLK
i_CLOCK => r_DATA_BUFFER[2].CLK
i_CLOCK => r_DATA_BUFFER[3].CLK
i_CLOCK => r_DATA_BUFFER[4].CLK
i_CLOCK => r_DATA_BUFFER[5].CLK
i_CLOCK => r_DATA_BUFFER[6].CLK
i_CLOCK => r_DATA_BUFFER[7].CLK
i_CLOCK => r_DATA_BUFFER[8].CLK
i_CLOCK => r_DATA_BUFFER[9].CLK
i_CLOCK => s_RECIEVING_FLAG.CLK
i_CLOCK => o_BUSY~reg0.CLK
i_CLOCK => r_PRESCALER[0].CLK
i_CLOCK => r_PRESCALER[1].CLK
i_CLOCK => r_PRESCALER[2].CLK
i_CLOCK => r_PRESCALER[3].CLK
i_CLOCK => r_PRESCALER[4].CLK
i_CLOCK => r_PRESCALER[5].CLK
i_CLOCK => r_PRESCALER[6].CLK
i_CLOCK => r_PRESCALER[7].CLK
i_CLOCK => r_PRESCALER[8].CLK
i_CLOCK => r_PRESCALER[9].CLK
i_CLOCK => r_PRESCALER[10].CLK
i_CLOCK => r_PRESCALER[11].CLK
i_CLOCK => r_PRESCALER[12].CLK
i_CLOCK => r_INDEX[0].CLK
i_CLOCK => r_INDEX[1].CLK
i_CLOCK => r_INDEX[2].CLK
i_CLOCK => r_INDEX[3].CLK
i_CLOCK => MEM_UART.CLK0
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => r_DATA_BUFFER.DATAB
i_RX => process_0.IN1
o_DATA[0] <= MEM_UART.DATAOUT
o_DATA[1] <= MEM_UART.DATAOUT1
o_DATA[2] <= MEM_UART.DATAOUT2
o_DATA[3] <= MEM_UART.DATAOUT3
o_DATA[4] <= MEM_UART.DATAOUT4
o_DATA[5] <= MEM_UART.DATAOUT5
o_DATA[6] <= MEM_UART.DATAOUT6
o_DATA[7] <= MEM_UART.DATAOUT7
i_log_ADDR[0] => MEM_UART.RADDR
i_log_ADDR[1] => MEM_UART.RADDR1
i_log_ADDR[2] => MEM_UART.RADDR2
i_log_ADDR[3] => MEM_UART.RADDR3
i_log_ADDR[4] => MEM_UART.RADDR4
i_log_ADDR[5] => MEM_UART.RADDR5
i_log_ADDR[6] => MEM_UART.RADDR6
i_log_ADDR[7] => MEM_UART.RADDR7
o_sig_CRRP_DATA <= o_sig_CRRP_DATA~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_BUSY <= o_BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|asciiHex:a2h
i_ascii[0] => Mux0.IN263
i_ascii[0] => Mux1.IN263
i_ascii[0] => Mux2.IN263
i_ascii[0] => Mux3.IN263
i_ascii[0] => Mux4.IN263
i_ascii[0] => Mux5.IN263
i_ascii[0] => Mux6.IN263
i_ascii[1] => Mux0.IN262
i_ascii[1] => Mux1.IN262
i_ascii[1] => Mux2.IN262
i_ascii[1] => Mux3.IN262
i_ascii[1] => Mux4.IN262
i_ascii[1] => Mux5.IN262
i_ascii[1] => Mux6.IN262
i_ascii[2] => Mux0.IN261
i_ascii[2] => Mux1.IN261
i_ascii[2] => Mux2.IN261
i_ascii[2] => Mux3.IN261
i_ascii[2] => Mux4.IN261
i_ascii[2] => Mux5.IN261
i_ascii[2] => Mux6.IN261
i_ascii[3] => Mux0.IN260
i_ascii[3] => Mux1.IN260
i_ascii[3] => Mux2.IN260
i_ascii[3] => Mux3.IN260
i_ascii[3] => Mux4.IN260
i_ascii[3] => Mux5.IN260
i_ascii[3] => Mux6.IN260
i_ascii[4] => Mux0.IN259
i_ascii[4] => Mux1.IN259
i_ascii[4] => Mux2.IN259
i_ascii[4] => Mux3.IN259
i_ascii[4] => Mux4.IN259
i_ascii[4] => Mux5.IN259
i_ascii[4] => Mux6.IN259
i_ascii[5] => Mux0.IN258
i_ascii[5] => Mux1.IN258
i_ascii[5] => Mux2.IN258
i_ascii[5] => Mux3.IN258
i_ascii[5] => Mux4.IN258
i_ascii[5] => Mux5.IN258
i_ascii[5] => Mux6.IN258
i_ascii[6] => Mux0.IN257
i_ascii[6] => Mux1.IN257
i_ascii[6] => Mux2.IN257
i_ascii[6] => Mux3.IN257
i_ascii[6] => Mux4.IN257
i_ascii[6] => Mux5.IN257
i_ascii[6] => Mux6.IN257
i_ascii[7] => Mux0.IN256
i_ascii[7] => Mux1.IN256
i_ascii[7] => Mux2.IN256
i_ascii[7] => Mux3.IN256
i_ascii[7] => Mux4.IN256
i_ascii[7] => Mux5.IN256
i_ascii[7] => Mux6.IN256
o_hex[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
o_hex[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
o_hex[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
o_hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
o_hex[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
o_hex[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
o_hex[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


